{"version":3,"sources":["components/Navbar.js","js/apiClient.js","js/controller.js","components/Card.js","js/config.js","pages/Characters.js","pages/Episodes.js","pages/Locations.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","exact","headers","Headers","getData","url","method","fetch","body","redirect","then","response","json","catch","error","console","log","apiRequest","append","customStyles","content","top","left","right","bottom","marginRight","transform","display","flexDirection","Card","data","React","useState","modalIsOpen","setIsOpen","item","closeModal","id","onClick","isOpen","onRequestClose","style","contentLabel","name","status","species","type","created","href","image","src","air_date","dimension","Modal","setAppElement","urlCharacters","urlLocations","urlEpisodes","Characters","useContext","Context","itemsList","fetchData","nextPage","setItemsList","currentUrl","setCurrentUrl","searchName","setSearchName","searchStatus","setSearchStatus","searchSpecies","setSearchSpecies","searchGender","setSearchGender","handleScroll","currentPosition","window","pageYOffset","document","scrollHeight","documentElement","clientHeight","useEffect","addEventListener","passive","removeEventListener","onSubmit","event","preventDefault","onChange","target","value","placeholder","selected","disabled","hidden","map","i","Episodes","searchEpisode","setSearchEpisode","Locations","searchType","setSearchType","searchDimension","setSearchDimension","_","require","createContext","App","prevPage","setPrevPage","setNextPage","a","info","results","prev","next","uniqBy","Provider","path","process","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2cc0329f.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './navbar.scss';\r\n\r\nexport const Navbar = () => (\r\n    <nav className=\"navbar navbar-dark navbar-expand-lg bg-secondary\">\r\n        <div className=\"navbar-logo\">\r\n            Rick and Morty app\r\n        </div>\r\n        <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/\" exact>Characters</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/locations\">Locations</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/episodes\">Episodes</NavLink>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n)","const headers = new Headers()\r\nheaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\r\n\r\nexport function apiRequest(method, url, urlencoded = null) {\r\n    const requestOptions = {\r\n        method: method,\r\n        headers: headers,\r\n        body: urlencoded,\r\n        redirect: 'follow',\r\n    }\r\n\r\n    return fetch(url, requestOptions)\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(error => console.log(error))\r\n}","import { apiRequest } from './apiClient';\r\n\r\nexport function getData(url) {\r\n    return apiRequest('GET', url)\r\n        .then()\r\n        .catch(error => console.log(error))\r\n}","import React from 'react'\r\nimport './card.scss'\r\nimport Modal from 'react-modal';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      display               : 'flex',\r\n      flexDirection         : 'column',\r\n    }\r\n  };\r\n\r\nModal.setAppElement('#root')\r\n\r\nexport default function Card(data) {\r\n    const [modalIsOpen,setIsOpen] = React.useState(false);\r\n    const {item} = data\r\n\r\n    function openModal() {\r\n        setIsOpen(true);\r\n    }\r\n\r\n    function closeModal(){\r\n        setIsOpen(false);\r\n      }\r\n\r\n    return (\r\n        <div className=\"card-body\" id=\"card-body\">\r\n            <button className=\"btn btn-success mb-2\" onClick={openModal}>Open Info</button>\r\n            <Modal\r\n              isOpen={modalIsOpen}\r\n              onRequestClose={closeModal}\r\n              style={customStyles}\r\n              contentLabel=\"Example Modal\"\r\n            >\r\n                <button className=\"btn btn-danger mb-2\" onClick={closeModal}>close</button>\r\n                <span>{item.name}</span>\r\n                <span>{item.status}</span>\r\n                <span>{item.species}</span>\r\n                <span>{item.type}</span>\r\n                <span>{item.created}</span>\r\n                <a href={item.url}>{item.url}</a>\r\n            </Modal>\r\n            \r\n            <h6 className=\"card-title\">{item.name}</h6>\r\n            {item.image ? <img className=\"card-img\" src={item.image} /> : ''}\r\n            {item.air_date ? <span>{item.air_date}</span> : ''}\r\n            {item.dimension ? <span>{item.dimension}</span> : ''}\r\n        </div>\r\n    )\r\n}","export const urlCharacters = \"https://rickandmortyapi.com/api/character\"\r\nexport const urlLocations = \"https://rickandmortyapi.com/api/location\"\r\nexport const urlEpisodes = \"https://rickandmortyapi.com/api/episode\"","import React, { Fragment, useEffect, useContext, useState } from 'react'\r\nimport { Context } from '../App'\r\nimport Card from '../components/Card'\r\nimport { urlCharacters } from '../js/config'\r\nimport './characters.scss'\r\n\r\nexport const Characters = () => {\r\n    const { itemsList, fetchData, nextPage, setItemsList } = useContext(Context)\r\n    const [currentUrl, setCurrentUrl] = useState(urlCharacters)\r\n    const [searchName, setSearchName] = useState('')\r\n    const [searchStatus, setSearchStatus] = useState('')\r\n    const [searchSpecies, setSearchSpecies] = useState('')\r\n    const [searchGender, setSearchGender] = useState('')\r\n\r\n    const handleScroll = () => {\r\n        const currentPosition = window.pageYOffset\r\n        const allWindowHeight = document.body.scrollHeight\r\n        const clientWindowHeight = document.documentElement.clientHeight\r\n        \r\n        if (allWindowHeight === clientWindowHeight + currentPosition) {\r\n            setCurrentUrl(nextPage)\r\n        }\r\n    }\r\n\r\n    const handleChangeName = (event) => {\r\n        setSearchName(event.target.value)\r\n    }\r\n\r\n    const handleChangeStatus = (event) => {\r\n        setSearchStatus(event.target.value)\r\n    }\r\n\r\n    const handleChangeSpecies = (event) => {\r\n        setSearchSpecies(event.target.value)\r\n    }\r\n\r\n    const handleChangeGender = (event) => {\r\n        setSearchGender(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        setItemsList([])\r\n        console.log(searchStatus)\r\n        setCurrentUrl(urlCharacters + '?name=' + searchName + searchStatus + '&species=' + searchSpecies + searchGender)\r\n    }\r\n\r\n    useEffect(() => setItemsList([]),[])\r\n\r\n    useEffect(() => {\r\n        fetchData(currentUrl)\r\n        window.addEventListener('wheel', handleScroll, {passive: true})\r\n\r\n        return () => {\r\n            window.removeEventListener('wheel', handleScroll)\r\n        }\r\n    }, [nextPage, currentUrl])\r\n    \r\n    if(!itemsList) return null\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav className=\"characters__search-bar bg-primary\">\r\n                <form className=\"characters__form\" onSubmit={handleSubmit}>\r\n                    <input className=\"form-control\" onChange={handleChangeName} placeholder=\"name...\"></input>\r\n                    <select className=\"custom-select\" id=\"select-status\" onChange={handleChangeStatus}>\r\n                        <option value=\"\" selected disabled hidden>Choose status</option>\r\n                        <option value=\"&status=alive\">alive</option>\r\n                        <option value=\"&status=dead\">dead</option>\r\n                        <option value=\"&status=unknown\">unknown</option>\r\n                    </select>\r\n                    <input className=\"form-control\" onChange={handleChangeSpecies} placeholder=\"species...\"></input>\r\n                    <select className=\"custom-select\" id=\"select-gender\" onChange={handleChangeGender}>\r\n                        <option value=\"\" selected disabled hidden>Choose gender</option>\r\n                        <option value=\"&gender=female\">female</option>\r\n                        <option value=\"&gender=male\">male</option>\r\n                        <option value=\"&gender=genderless\">genderless</option>\r\n                        <option value=\"&gender=unknown\">unknown</option>\r\n                    </select>\r\n                    <input className=\"btn btn-warning\" type=\"submit\" value=\"search\" />\r\n                </form>\r\n            </nav>\r\n            <h1 className=\"pt-1 pb-1\">Characters</h1>\r\n            <div className=\"characters__items\" id=\"characters__items\">\r\n                {itemsList.map((item, i) => {\r\n                    return <Card item={item} key={i} />\r\n                })}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}","import React, { Fragment, useContext, useEffect, useState } from 'react'\r\nimport { Context } from '../App'\r\nimport Card from '../components/Card'\r\nimport { urlEpisodes } from '../js/config'\r\nimport './episodes.scss'\r\n\r\nexport const Episodes = () => {\r\n    const { itemsList, fetchData, nextPage, setItemsList } = useContext(Context)\r\n    const [currentUrl, setCurrentUrl] = useState(urlEpisodes)\r\n    const [searchName, setSearchName] = useState('')\r\n    const [searchEpisode, setSearchEpisode] = useState('')\r\n\r\n    const handleScroll = () => {\r\n        const currentPosition = window.pageYOffset\r\n        const allWindowHeight = document.body.scrollHeight\r\n        const clientWindowHeight = document.documentElement.clientHeight\r\n        \r\n        if (allWindowHeight === clientWindowHeight + currentPosition) {\r\n            setCurrentUrl(nextPage)\r\n        }\r\n    }\r\n\r\n    const handleChangeName = (event) => {\r\n        setSearchName(event.target.value)\r\n    }\r\n\r\n    const handleChangeEpisode = (event) => {\r\n        setSearchEpisode(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        setItemsList([])\r\n        setCurrentUrl(urlEpisodes + '?name=' + searchName + '&type=' + searchEpisode )\r\n    }\r\n\r\n    useEffect(() => setItemsList([]),[])\r\n\r\n    useEffect(() => {\r\n        fetchData(currentUrl)\r\n        window.addEventListener('wheel', handleScroll, {passive: true})\r\n\r\n        return () => {\r\n            window.removeEventListener('wheel', handleScroll)\r\n        }\r\n    }, [nextPage, currentUrl])\r\n    \r\n    if(!itemsList) return null\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav className=\"characters__search-bar bg-primary\">\r\n                <form className=\"characters__form\" onSubmit={handleSubmit}>\r\n                    <input className=\"form-control\" onChange={handleChangeName} placeholder=\"name...\"></input>\r\n                    <input className=\"form-control\" onChange={handleChangeEpisode} placeholder=\"episode...\"></input>\r\n                    <input className=\"btn btn-warning\" type=\"submit\" value=\"search\" />\r\n                </form>\r\n            </nav>\r\n            <h1 className=\"pt-1 pb-1\">Episodes</h1>\r\n            <div className=\"episodes-items\">\r\n                {itemsList.map((item, i) => {\r\n                    console.log(item)\r\n                    return <Card item={item} key={i} />\r\n                })}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}","import React, { Fragment, useContext, useEffect, useState } from 'react'\r\nimport { Context } from '../App'\r\nimport Card from '../components/Card'\r\nimport { urlLocations } from '../js/config'\r\nimport './locations.scss'\r\n\r\nexport const Locations = () => {\r\n    const { itemsList, fetchData, nextPage, setItemsList } = useContext(Context)\r\n    const [currentUrl, setCurrentUrl] = useState(urlLocations)\r\n    const [searchName, setSearchName] = useState('')\r\n    const [searchType, setSearchType] = useState('')\r\n    const [searchDimension, setSearchDimension] = useState('')\r\n\r\n    const handleScroll = () => {\r\n        const currentPosition = window.pageYOffset\r\n        const allWindowHeight = document.body.scrollHeight\r\n        const clientWindowHeight = document.documentElement.clientHeight\r\n        \r\n        if (allWindowHeight === clientWindowHeight + currentPosition) {\r\n            setCurrentUrl(nextPage)\r\n        }\r\n    }\r\n\r\n    const handleChangeName = (event) => {\r\n        setSearchName(event.target.value)\r\n    }\r\n\r\n    const handleChangeType = (event) => {\r\n        setSearchType(event.target.value)\r\n    }\r\n\r\n    const handleChangeDimension = (event) => {\r\n        setSearchDimension(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        setItemsList([])\r\n        setCurrentUrl(urlLocations + '?name=' + searchName + '&type=' + searchType + '&dimension=' + searchDimension )\r\n    }\r\n\r\n    useEffect(() => setItemsList([]),[])\r\n    \r\n    useEffect(() => {\r\n        fetchData(currentUrl)\r\n        window.addEventListener('wheel', handleScroll, {passive: true})\r\n        \r\n        return () => {\r\n            window.removeEventListener('wheel', handleScroll)\r\n        }\r\n    }, [nextPage, currentUrl])\r\n    \r\n    if(!itemsList) return null\r\n    \r\n    return (\r\n        <Fragment>\r\n            <nav className=\"characters__search-bar bg-primary\">\r\n                <form className=\"characters__form\" onSubmit={handleSubmit}>\r\n                    <input className=\"form-control\" onChange={handleChangeName} placeholder=\"name...\"></input>\r\n                    <input className=\"form-control\" onChange={handleChangeType} placeholder=\"type...\"></input>\r\n                    <input className=\"form-control\" onChange={handleChangeDimension} placeholder=\"dimension...\"></input>\r\n                    <input className=\"btn btn-warning\" type=\"submit\" value=\"search\" />\r\n                </form>\r\n            </nav>\r\n            <h1 className=\"pt-1 pb-1\">Locations</h1>\r\n            <div className=\"locations-items\">\r\n                {itemsList.map((item, i) => {\r\n                    console.log(item)\r\n                    return <Card item={item} key={i} />\r\n                })}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { getData } from './js/controller';\nimport { Characters } from './pages/Characters';\nimport { Episodes } from './pages/Episodes';\nimport { Locations } from './pages/Locations';\nvar _ = require('lodash');\n\nexport const Context = React.createContext()\n\nfunction App() {\n  const [itemsList, setItemsList] = useState([])\n  const [prevPage, setPrevPage] = useState(null)\n  const [nextPage, setNextPage] = useState(null)\n  \n  async function fetchData(currentUrl) {\n    if (!currentUrl) return null\n    const {info, results} = await getData(currentUrl)\n    if (!info || !results) return\n    setPrevPage(info.prev)\n    setNextPage(info.next)\n    setItemsList(prev =>  _.uniqBy([...prev, ...results], 'id'))\n  }\n\n  return (\n    <Context.Provider value={{ itemsList, fetchData, prevPage, nextPage, setItemsList }}>\n      <BrowserRouter>\n        <Navbar />\n        <div className=\"container pt-3\">\n          <Switch>\n            <Route path={process.env.PUBLIC_URL + '/'} exact component={Characters}  />\n            <Route path={process.env.PUBLIC_URL + '/locations'} component={Locations} />\n            <Route path={process.env.PUBLIC_URL + '/episodes'} component={Episodes} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}